#nullable enable
namespace ShopifySharp.GraphQL;
using System;
using System.Text.Json.Serialization;
using System.Collections.Generic;

/// <summary>
/// A record of an execution of the subscription billing process. Billing attempts use
/// idempotency keys to avoid duplicate order creation. A successful billing attempt
/// will create an order.
/// </summary>
public record SubscriptionBillingAttempt : IGraphQLObject, INode
{
    /// <summary>
    /// The date and time when the billing attempt was completed.
    /// </summary>
    [JsonPropertyName("completedAt")]
#if NETSTANDARD2_0
	[System.Text.Json.DateOnlyConverter]
#endif
    public DateTime? completedAt { get; set; } = null;

    /// <summary>
    /// The date and time when the billing attempt was created.
    /// </summary>
    [JsonPropertyName("createdAt")]
#if NETSTANDARD2_0
	[System.Text.Json.DateOnlyConverter]
#endif
    public DateTime? createdAt { get; set; } = null;

    /// <summary>
    /// A code corresponding to a payment error during processing.
    /// </summary>
    [JsonPropertyName("errorCode")]
    [Obsolete("Use `processingError.code` instead to get the errorCode")]
    public SubscriptionBillingAttemptErrorCode? errorCode { get; set; } = null;

    /// <summary>
    /// A message describing a payment error during processing.
    /// </summary>
    [JsonPropertyName("errorMessage")]
    [Obsolete("Use `processingError.message` instead to get the errorMessage")]
    public string? errorMessage { get; set; } = null;

    /// <summary>
    /// A globally-unique ID.
    /// </summary>
    [JsonPropertyName("id")]
    public string? id { get; set; } = null;

    /// <summary>
    /// A unique key generated by the client to avoid duplicate payments.
    /// </summary>
    [JsonPropertyName("idempotencyKey")]
    public string? idempotencyKey { get; set; } = null;

    /// <summary>
    /// The URL where the customer needs to be redirected so they can complete the 3D Secure payment flow.
    /// </summary>
    [JsonPropertyName("nextActionUrl")]
    public string? nextActionUrl { get; set; } = null;

    /// <summary>
    /// The result of this billing attempt if completed successfully.
    /// </summary>
    [JsonPropertyName("order")]
    public Order? order { get; set; } = null;

    /// <summary>
    /// The date and time used to calculate fulfillment intervals for a billing attempt that
    /// successfully completed after the current anchor date. To prevent fulfillment from being
    /// pushed to the next anchor date, this field can override the billing attempt date.
    /// </summary>
    [JsonPropertyName("originTime")]
#if NETSTANDARD2_0
	[System.Text.Json.DateOnlyConverter]
#endif
    public DateTime? originTime { get; set; } = null;

    /// <summary>
    /// The reference shared between retried payment attempts.
    /// </summary>
    [JsonPropertyName("paymentGroupId")]
    public string? paymentGroupId { get; set; } = null;

    /// <summary>
    /// The reference shared between payment attempts with similar payment details.
    /// </summary>
    [JsonPropertyName("paymentSessionId")]
    public string? paymentSessionId { get; set; } = null;

    /// <summary>
    /// Error information from processing the billing attempt.
    /// </summary>
    [JsonPropertyName("processingError")]
    public ISubscriptionBillingAttemptProcessingError? processingError { get; set; } = null;

    /// <summary>
    /// Whether the billing attempt is still processing.
    /// </summary>
    [JsonPropertyName("ready")]
    public bool? ready { get; set; } = null;

    /// <summary>
    /// Whether the billing attempt respects the merchant's inventory policy.
    /// </summary>
    [JsonPropertyName("respectInventoryPolicy")]
    public bool? respectInventoryPolicy { get; set; } = null;

    /// <summary>
    /// The subscription contract.
    /// </summary>
    [JsonPropertyName("subscriptionContract")]
    public SubscriptionContract? subscriptionContract { get; set; } = null;

    /// <summary>
    /// The transactions created by the billing attempt.
    /// </summary>
    [JsonPropertyName("transactions")]
    public OrderTransactionConnection? transactions { get; set; } = null;
}