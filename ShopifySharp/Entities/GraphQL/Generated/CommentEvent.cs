#nullable enable
namespace ShopifySharp.GraphQL;
using System;
using System.Text.Json.Serialization;
using System.Collections.Generic;

/// <summary>
/// Comment events are generated by staff members of a shop.
/// They are created when a staff member adds a comment to the timeline of an order, draft order, customer, or transfer.
/// </summary>
public record CommentEvent : IGraphQLObject, IEvent, INode
{
    /// <summary>
    /// The action that occured.
    /// </summary>
    [JsonPropertyName("action")]
    public string? action { get; set; } = null;

    /// <summary>
    /// The name of the app that created the event.
    /// </summary>
    [JsonPropertyName("appTitle")]
    public string? appTitle { get; set; } = null;

    /// <summary>
    /// The attachments associated with the comment event.
    /// </summary>
    [JsonPropertyName("attachments")]
    public ICollection<CommentEventAttachment>? attachments { get; set; } = null;

    /// <summary>
    /// Whether the event was created by an app.
    /// </summary>
    [JsonPropertyName("attributeToApp")]
    public bool? attributeToApp { get; set; } = null;

    /// <summary>
    /// Whether the event was caused by an admin user.
    /// </summary>
    [JsonPropertyName("attributeToUser")]
    public bool? attributeToUser { get; set; } = null;

    /// <summary>
    /// The name of the user that authored the comment event.
    /// </summary>
    [JsonPropertyName("author")]
    public StaffMember? author { get; set; } = null;

    /// <summary>
    /// Whether the comment event can be deleted. If true, then the comment event can be deleted.
    /// </summary>
    [JsonPropertyName("canDelete")]
    public bool? canDelete { get; set; } = null;

    /// <summary>
    /// Whether the comment event can be edited. If true, then the comment event can be edited.
    /// </summary>
    [JsonPropertyName("canEdit")]
    public bool? canEdit { get; set; } = null;

    /// <summary>
    /// The date and time when the event was created.
    /// </summary>
    [JsonPropertyName("createdAt")]
#if NETSTANDARD2_0
	[System.Text.Json.DateOnlyConverter]
#endif
    public DateTime? createdAt { get; set; } = null;

    /// <summary>
    /// Whether the event is critical.
    /// </summary>
    [JsonPropertyName("criticalAlert")]
    public bool? criticalAlert { get; set; } = null;

    /// <summary>
    /// Whether the comment event has been edited. If true, then the comment event has been edited.
    /// </summary>
    [JsonPropertyName("edited")]
    public bool? edited { get; set; } = null;

    /// <summary>
    /// The object reference associated with the comment event. For example, a product or discount).
    /// </summary>
    [JsonPropertyName("embed")]
    public CommentEventEmbed? embed { get; set; } = null;

    /// <summary>
    /// A globally-unique ID.
    /// </summary>
    [JsonPropertyName("id")]
    public string? id { get; set; } = null;

    /// <summary>
    /// Human readable text that describes the event.
    /// </summary>
    [JsonPropertyName("message")]
    public string? message { get; set; } = null;

    /// <summary>
    /// The raw body of the comment event.
    /// </summary>
    [JsonPropertyName("rawMessage")]
    public string? rawMessage { get; set; } = null;

    /// <summary>
    /// The parent subject to which the comment event belongs.
    /// </summary>
    [JsonPropertyName("subject")]
    public ICommentEventSubject? subject { get; set; } = null;
}