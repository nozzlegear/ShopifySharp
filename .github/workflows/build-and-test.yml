name: Build/Test Pipeline

on:
  push:
    branches: [ master, setup-github-actions ]
    paths-ignore:
      - 'docs/wiki'
      - '.gitmodules'
  workflow_dispatch:

# Cancel any in-progress build/test runs
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    environment: "Build Environment"

    steps:
    - name: Install fish
      run: |
        sudo apt-add-repository ppa:fish-shell/release-3 \
        && sudo apt-get -qq update \
        && sudo apt-get -qq install fish parallel

    - name: Checkout branch
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        ref: ${{ github.ref }}

    - name: Setup dotnet
      uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Build and pack
      run: fish .github/scripts/build.fish
      shell: bash
      env:
        GITHUB_RUN_NUMBER: "${{ github.run_number }}"
        ARTIFACT_DIR: "./artifacts"

    - name: Upload artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: artifacts
        if-no-files-found: error
        path: |
          ./artifacts/*.nupkg
          ./artifacts/*.snupkg

  test-windows:
    name: "Unit tests (.NET Framework)"
    runs-on: "windows-latest"
    needs: build
    environment: "Unit test environment"

    env:
      SHOPIFYSHARP_ACCESS_TOKEN: "${{ secrets.SHOPIFYSHARP_ACCESS_TOKEN }}"
      SHOPIFYSHARP_API_KEY: "${{ secrets.SHOPIFYSHARP_API_KEY }}"
      SHOPIFYSHARP_SECRET_KEY: "${{ secrets.SHOPIFYSHARP_SECRET_KEY }}"
      SHOPIFYSHARP_MY_SHOPIFY_URL: "${{ secrets.SHOPIFYSHARP_MY_SHOPIFY_URL }}"
      SHOPIFYSHARP_ORG_ID: "${{ secrets.SHOPIFYSHARP_ORG_ID }}"
      SHOPIFYSHARP_ORG_TOKEN: "${{ secrets.SHOPIFYSHARP_ORG_TOKEN }}"

    steps:
    - name: Checkout branch
      uses: actions/checkout@master

    - name: Execute .NET Framework unit tests
      run: .github/scripts/test-dnf.ps1
      shell: pwsh

    - name: Upload test results
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: framework-test-results
        path: TestResults
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

  test:
    name: "Unit tests"
    runs-on: ubuntu-22.04
    # Do not run this job until the build job completes
    needs: test-windows
    environment: "Unit test environment"

    env:
      SHOPIFYSHARP_ACCESS_TOKEN: "${{ secrets.SHOPIFYSHARP_ACCESS_TOKEN }}"
      SHOPIFYSHARP_API_KEY: "${{ secrets.SHOPIFYSHARP_API_KEY }}"
      SHOPIFYSHARP_SECRET_KEY: "${{ secrets.SHOPIFYSHARP_SECRET_KEY }}"
      SHOPIFYSHARP_MY_SHOPIFY_URL: "${{ secrets.SHOPIFYSHARP_MY_SHOPIFY_URL }}"
      SHOPIFYSHARP_ORG_ID: "${{ secrets.SHOPIFYSHARP_ORG_ID }}"
      SHOPIFYSHARP_ORG_TOKEN: "${{ secrets.SHOPIFYSHARP_ORG_TOKEN }}"

    steps:
    - name: Install fish
      run: |
        sudo apt-add-repository ppa:fish-shell/release-3 \
        && sudo apt-get -qq update \
        && sudo apt-get -qq install fish parallel

    - name: Setup dotnet
      uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Checkout branch
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Create ShopifySharp.Tests.Integration/appsettings.local.json
      run: |
        cat <<EOF > ShopifySharp.Tests.Integration/appsettings.local.json
        {
          "ShopifySharp": {
            "Credentials": {
              "ShopDomain": "${{ secrets.SHOPIFYSHARP_MY_SHOPIFY_URL }}",
              "AccessToken": "${{ secrets.SHOPIFYSHARP_ACCESS_TOKEN }}",
              "ApiKey": "${{ secrets.SHOPIFYSHARP_API_KEY }}"
            }
          }
        }
        EOF

    - name: Execute unit test script
      run: fish .github/scripts/test.fish
      shell: bash

    - name: Upload test results
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: core-test-results
        path: TestResults
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

  publish:
    name: "Publish prerelease packages"
    runs-on: ubuntu-22.04
    needs: test
    environment: "Prerelease deployment environment"
    # Only publish prerelease packages on the master branch
    if: ${{ github.ref_name == 'master' }}

    steps:
    - name: Setup dotnet
      uses: actions/setup-dotnet@8e6bd2905eef86446227f003dda1deb3916c4aaf # v2.2.1
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Download artifacts
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: artifacts
        path: ./artifacts

    - name: List files in artifacts folder
      run: ls ./artifacts

    - name: Publish package to Nuget
      # Prerelease packages have a `-b*.nupkg` suffix
      run: dotnet nuget push --skip-duplicate -k ${{ secrets.NUGET_TOKEN }} -s "https://api.nuget.org/v3/index.json" ./artifacts/*-b*.nupkg
